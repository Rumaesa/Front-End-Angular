{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ReservationService {\n  constructor() {\n    this.reservations = [];\n  }\n  // CRUD Operation:\n  getReservations() {\n    return this.reservations;\n  }\n  getReservation(id) {\n    return this.reservations.find(res => res.id === id);\n  }\n  addReservation(reservation) {\n    this.reservations.push(reservation);\n    localStorage.setItem('reservation', JSON.stringify(this.reservations));\n  }\n  deleteReservation(id) {\n    let index = this.reservations.findIndex(res => res.id === id);\n    this.reservations.splice(index, 1);\n    localStorage.setItem('reservation', JSON.stringify(this.reservations));\n  }\n  updateReservation(updatedReservation) {\n    let index = this.reservations.findIndex(res => res.id === updatedReservation.id);\n    this.reservations[index] = updatedReservation;\n    localStorage.setItem('reservation', JSON.stringify(this.reservations));\n  }\n  static #_ = this.ɵfac = function ReservationService_Factory(t) {\n    return new (t || ReservationService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReservationService,\n    factory: ReservationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ReservationService","constructor","reservations","getReservations","getReservation","id","find","res","addReservation","reservation","push","localStorage","setItem","JSON","stringify","deleteReservation","index","findIndex","splice","updateReservation","updatedReservation","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\workspace\\Web Development\\Angular\\Front-End-Angular\\Hotel-Reservation\\src\\app\\reservation\\reservation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Reservation } from '../model/reservation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReservationService {\n  private reservations: Reservation[] = [];\n\n  // CRUD Operation:\n  getReservations(): Reservation[] {\n    return this.reservations;\n  }\n\n  getReservation(id: string): Reservation | undefined {\n    return this.reservations.find((res) => res.id === id);\n  }\n\n  addReservation(reservation: Reservation): void {\n    this.reservations.push(reservation);\n    localStorage.setItem('reservation', JSON.stringify(this.reservations));\n  }\n\n  deleteReservation(id: string): void {\n    let index = this.reservations.findIndex((res) => res.id === id);\n    this.reservations.splice(index, 1);\n    localStorage.setItem('reservation', JSON.stringify(this.reservations));\n  }\n\n  updateReservation(updatedReservation: Reservation): void {\n    let index = this.reservations.findIndex(\n      (res) => res.id === updatedReservation.id\n    );\n    this.reservations[index] = updatedReservation;\n    localStorage.setItem('reservation', JSON.stringify(this.reservations));\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAH/BC,YAAA;IAIU,KAAAC,YAAY,GAAkB,EAAE;;EAExC;EACAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,YAAY;EAC1B;EAEAE,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACH,YAAY,CAACI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACF,EAAE,KAAKA,EAAE,CAAC;EACvD;EAEAG,cAAcA,CAACC,WAAwB;IACrC,IAAI,CAACP,YAAY,CAACQ,IAAI,CAACD,WAAW,CAAC;IACnCE,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACZ,YAAY,CAAC,CAAC;EACxE;EAEAa,iBAAiBA,CAACV,EAAU;IAC1B,IAAIW,KAAK,GAAG,IAAI,CAACd,YAAY,CAACe,SAAS,CAAEV,GAAG,IAAKA,GAAG,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC/D,IAAI,CAACH,YAAY,CAACgB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAClCL,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACZ,YAAY,CAAC,CAAC;EACxE;EAEAiB,iBAAiBA,CAACC,kBAA+B;IAC/C,IAAIJ,KAAK,GAAG,IAAI,CAACd,YAAY,CAACe,SAAS,CACpCV,GAAG,IAAKA,GAAG,CAACF,EAAE,KAAKe,kBAAkB,CAACf,EAAE,CAC1C;IACD,IAAI,CAACH,YAAY,CAACc,KAAK,CAAC,GAAGI,kBAAkB;IAC7CT,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACZ,YAAY,CAAC,CAAC;EACxE;EAAC,QAAAmB,CAAA,G;qBA7BUrB,kBAAkB;EAAA;EAAA,QAAAsB,EAAA,G;WAAlBtB,kBAAkB;IAAAuB,OAAA,EAAlBvB,kBAAkB,CAAAwB,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}