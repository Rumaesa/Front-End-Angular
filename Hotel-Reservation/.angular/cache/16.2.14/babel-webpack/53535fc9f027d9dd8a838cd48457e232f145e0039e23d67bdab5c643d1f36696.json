{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\workspace\\Web Development\\Angular\\Front-End-Angular\\Hotel-Reservation\\src\\app\\reservation\\reservation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Reservation } from '../model/reservation';\nimport { Rou}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReservationService {\n  private reservations: Reservation[] = [];\n\n  constructor() {\n    let savedReservations = localStorage.getItem('reservation');\n    this.reservations = savedReservations ? JSON.parse(savedReservations) : [];\n  }\n\n  // CRUD Operation:\n  getReservations(): Reservation[] {\n    return this.reservations;\n  }\n\n  getReservation(id: string): Reservation | undefined {\n    return this.reservations.find((res) => res.id === id);\n  }\n\n  addReservation(reservation: Reservation): void {\n    this.reservations.push(reservation);\n    localStorage.setItem('reservation', JSON.stringify(this.reservations));\n  }\n\n  deleteReservation(id: string): void {\n    let index = this.reservations.findIndex((res) => res.id === id);\n    this.reservations.splice(index, 1);\n    localStorage.setItem('reservation', JSON.stringify(this.reservations));\n  }\n\n  updateReservation(updatedReservation: Reservation): void {\n    let index = this.reservations.findIndex(\n      (res) => res.id === updatedReservation.id\n    );\n    this.reservations[index] = updatedReservation;\n    localStorage.setItem('reservation', JSON.stringify(this.reservations));\n  }\n}\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}