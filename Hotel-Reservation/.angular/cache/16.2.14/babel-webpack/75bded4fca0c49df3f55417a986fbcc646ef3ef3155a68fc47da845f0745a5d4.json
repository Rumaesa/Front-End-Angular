{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ReservationFormComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Check-In Date is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Check-Out Date is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Guest Name is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Guest Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Room Number is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ReservationFormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.reservationForm = new FormGroup({});\n  }\n  ngOnInit() {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: ['', Validators.required],\n      checkOutDate: ['', Validators.required],\n      guestName: ['', Validators.required],\n      guestEmail: ['', [Validators.required, Validators.email]],\n      roomNumber: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.reservationForm.valid) {\n      console.log('Valid Form');\n    }\n  }\n  static #_ = this.ɵfac = function ReservationFormComponent_Factory(t) {\n    return new (t || ReservationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReservationFormComponent,\n    selectors: [[\"app-reservation-form\"]],\n    decls: 31,\n    vars: 7,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"date\", \"formControlName\", \"checkInDate\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"type\", \"date\", \"formControlName\", \"checkOutDate\"], [\"type\", \"text\", \"formControlName\", \"guestName\"], [\"type\", \"text\", \"formControlName\", \"guestEmail\"], [\"type\", \"number\", \"formControlName\", \"roomNumber\"], [\"type\", \"submit\", 3, \"disabled\"], [2, \"color\", \"red\"]],\n    template: function ReservationFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"head\");\n        i0.ɵɵelementStart(1, \"body\")(2, \"div\")(3, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ReservationFormComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n        i0.ɵɵtext(6, \"Check-In Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 1);\n        i0.ɵɵtemplate(8, ReservationFormComponent_div_8_Template, 2, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\");\n        i0.ɵɵtext(11, \"Check-Out Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 3);\n        i0.ɵɵtemplate(13, ReservationFormComponent_div_13_Template, 2, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\");\n        i0.ɵɵtext(16, \"Guest Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 4);\n        i0.ɵɵtemplate(18, ReservationFormComponent_div_18_Template, 2, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\")(20, \"label\");\n        i0.ɵɵtext(21, \"Guest Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 5);\n        i0.ɵɵtemplate(23, ReservationFormComponent_div_23_Template, 2, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\")(25, \"label\");\n        i0.ɵɵtext(26, \"Room Number:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 6);\n        i0.ɵɵtemplate(28, ReservationFormComponent_div_28_Template, 2, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 7);\n        i0.ɵɵtext(30, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_5_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.reservationForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.reservationForm.get(\"checkInDate\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.reservationForm.get(\"checkInDate\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.reservationForm.get(\"checkOutDate\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.reservationForm.get(\"checkOutDate\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.reservationForm.get(\"guestName\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.reservationForm.get(\"guestName\")) == null ? null : tmp_3_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.reservationForm.get(\"guestEmail\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.reservationForm.get(\"guestEmail\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.reservationForm.get(\"roomNumber\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.reservationForm.get(\"roomNumber\")) == null ? null : tmp_5_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.reservationForm.invalid);\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ReservationFormComponent","constructor","formBuilder","reservationForm","ngOnInit","group","checkInDate","required","checkOutDate","guestName","guestEmail","email","roomNumber","onSubmit","valid","console","log","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","ReservationFormComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","ReservationFormComponent_Template_form_ngSubmit_3_listener","ɵɵtemplate","ReservationFormComponent_div_8_Template","ReservationFormComponent_div_13_Template","ReservationFormComponent_div_18_Template","ReservationFormComponent_div_23_Template","ReservationFormComponent_div_28_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","invalid","touched","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0"],"sources":["C:\\workspace\\Web Development\\Angular\\Front-End-Angular\\Hotel-Reservation\\src\\app\\reservation-form\\reservation-form.component.ts","C:\\workspace\\Web Development\\Angular\\Front-End-Angular\\Hotel-Reservation\\src\\app\\reservation-form\\reservation-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validator, Validators } from '@angular/forms';\nimport { OnInit } from '@angular/core';\nimport { Reservation } from '../model/reservation';\nimport { ReservationService } from '../reservation/reservation.service';\n\n@Component({\n  selector: 'app-reservation-form',\n  templateUrl: './reservation-form.component.html',\n  styleUrls: ['./reservation-form.component.css'],\n})\nexport class ReservationFormComponent implements OnInit {\n  reservationForm: FormGroup = new FormGroup({});\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: ['', Validators.required],\n      checkOutDate: ['', Validators.required],\n      guestName: ['', Validators.required],\n      guestEmail: ['', [Validators.required, Validators.email]],\n      roomNumber: ['', Validators.required],\n    });\n  }\n\n  onSubmit() {\n    if (this.reservationForm.valid) {\n      console.log('Valid Form');\n    }\n  }\n}\n","<!-- <p>reservation-form works!</p> -->\n<head> </head>\n\n<body>\n  <div>\n    <form [formGroup]=\"reservationForm\" (ngSubmit)=\"onSubmit()\">\n      <div>\n        <label>Check-In Date:</label>\n        <input type=\"date\" formControlName=\"checkInDate\" />\n        <div\n          *ngIf=\"\n            reservationForm.get('checkInDate')?.invalid &&\n            reservationForm.get('checkInDate')?.touched\n          \"\n          style=\"color: red\"\n        >\n          Check-In Date is required!\n        </div>\n      </div>\n      <div>\n        <label>Check-Out Date:</label>\n        <input type=\"date\" formControlName=\"checkOutDate\" />\n        <div\n          *ngIf=\"\n            reservationForm.get('checkOutDate')?.invalid &&\n            reservationForm.get('checkOutDate')?.touched\n          \"\n          style=\"color: red\"\n        >\n          Check-Out Date is required!\n        </div>\n      </div>\n      <div>\n        <label>Guest Name:</label>\n        <input type=\"text\" formControlName=\"guestName\" />\n        <div\n          *ngIf=\"\n            reservationForm.get('guestName')?.invalid &&\n            reservationForm.get('guestName')?.touched\n          \"\n          style=\"color: red\"\n        >\n          Guest Name is required!\n        </div>\n      </div>\n      <div>\n        <label>Guest Email:</label>\n        <input type=\"text\" formControlName=\"guestEmail\" />\n        <div\n          *ngIf=\"\n            reservationForm.get('guestEmail')?.invalid &&\n            reservationForm.get('guestEmail')?.touched\n          \"\n          style=\"color: red\"\n        >\n          Guest Email is required!\n        </div>\n      </div>\n      <div>\n        <label>Room Number:</label>\n        <input type=\"number\" formControlName=\"roomNumber\" />\n        <div\n          *ngIf=\"\n            reservationForm.get('roomNumber')?.invalid &&\n            reservationForm.get('roomNumber')?.touched\n          \"\n          style=\"color: red\"\n        >\n          Room Number is required!\n        </div>\n      </div>\n      <button type=\"submit\" [disabled]=\"reservationForm.invalid\">Submit</button>\n    </form>\n  </div>\n</body>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}